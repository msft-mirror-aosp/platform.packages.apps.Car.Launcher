/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id "com.google.protobuf"
    id 'kotlin-android'
}

android {
    namespace 'com.android.car.carlauncher'
    compileSdk gradle.ext.aaosTargetSDK

    defaultConfig {
        minSdk gradle.ext.aaosLatestSDK
        targetSdk gradle.ext.aaosLatestSDK
        versionCode gradle.ext.getVersionCode()
        versionName gradle.ext.getVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            java.srcDirs = ['src']
            java {
                srcDirs += 'hidden_apis_disabled/src/com/android/car/carlauncher/hidden'
                srcDirs += 'build/generated/source/proto/java'
            }
            kotlin {
                srcDirs += 'build/generated/source/proto/kotlin'
            }
            proto {
                srcDir 'src/com/android/car/carlauncher/proto' // default value
            }
        }

        test {
            java.srcDirs += 'robotests/src'
        }

    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        disable 'PrivateResource'
    }
}

dependencies {
    compileOnly files(gradle.ext.lib_car_system_stubs)
    compileOnly files(gradle.ext.lib_car_ui_lib_oem_apis)
    implementation project(":libs:car-apps-common")
    implementation project(":libs:car-media-common")
    implementation project(":libs:car-ui-lib")
    implementation 'androidx.core:core-ktx:1.12.0'
    api 'androidx.annotation:annotation:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'com.android.car.ui:car-ui-lib:2.5.1'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation  "androidx.datastore:datastore:1.0.0"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation('com.google.protobuf:protobuf-javalite:3.25.1')

    //Test dependencies
    testImplementation files(gradle.ext.lib_car_system_stubs)
    testImplementation files(gradle.ext.lib_car_test_api)
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core-ktx:1.5.0'

    testImplementation 'org.robolectric:robolectric:4.11.1'

    testImplementation "org.mockito:mockito-core:5.8.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.1"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
